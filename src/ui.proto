package ui;
/*
	gui.addToggle("Draw Fluid",
				  physicsSystem.settings.drawFluid);
	gui.addSlider("fs.viscocity",
				  physicsSystem.fluidSolver.viscocity, 0.0, 0.0002, 0.5);
	gui.addSlider("fs.colorDiffusion",
				  physicsSystem.fluidSolver.colorDiffusion, 0.0, 0.0003, 0.5);
	gui.addSlider("fs.fadeSpeed",
				  physicsSystem.fluidSolver.fadeSpeed, 0.0, 0.1, 0.5);
	gui.addSlider("fs.solverIterations",
				  physicsSystem.fluidSolver.solverIterations, 1, 20);
	gui.addSlider("fd.drawMode",
				  physicsSystem.fluidDrawer.drawMode, 0, FLUID_DRAW_MODE_COUNT-1);
	gui.addToggle("fs.doRGB",
				  physicsSystem.fluidSolver.doRGB);
	gui.addToggle("fs.doVorticityConfinement",
				  physicsSystem.fluidSolver.doVorticityConfinement);
	gui.addToggle("drawParticles",
				  physicsSystem.settings.drawParticles); 
	gui.addToggle("renderUsingVA",
				  physicsSystem.settings.renderUsingVA); 

	gui.addPage("Camera");
	gui.addContent("Color Image",
				   videoSystem.colorImg, (float)-1);
	gui.addContent("Gray Diff",
				   videoSystem.grayDiff, (float)-1);
	gui.addContent("Vector Field [x]",
				   videoSystem.dvX, (float)-1);
	gui.addContent("Vector Field [y]",
				   videoSystem.dvY, (float)-1);
	
	gui.addSlider("Threshold",
				  videoSystem.settings.threshold, 0, 255);
	gui.addButton("Capture Bg",
				  videoSystem.settings.bLearnBg);
	
	gui.addPage("Optical Flow");
	gui.addToggle("Calc. Flow",
				  videoSystem.settings.calc_flow);
	gui.addToggle("Draw Flow",
				  videoSystem.settings.draw_flow);
	gui.addSlider("Max Features",
				  videoSystem.settings.max_features, 0, MAX_CORNERS);
	gui.addSlider("Dist. Vec. Scale",
				  videoSystem.settings.dv_scale, 0.0, 10.0, 0.1);
	gui.addSlider("Dist. Vec. Threshold",
				  videoSystem.settings.dv_min_error, 0, 512);
	gui.addSlider("Dist. Vec. Threshold",
				  videoSystem.settings.dv_max_error, 512, 1024);	
	
	gui.addContent("Contours", videoSystem.contourFinder);
*/
message Parameters {
  optional int32 id = 1;
  optional string name = 2;

  message Parameter {
    optional int32 id = 1;
//    optional int32 angle = 3;
  }

  repeated Parameter parameter = 3;
}
